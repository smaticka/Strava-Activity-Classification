clc
clear
setwd("~/Box Sync/stanford/Classes/MS&E 226 small data/mini project")
open("ProcessData.R")
file.edit("ProcessData.R")
pwd
getwd()
["test","ing"]
("test","ing")
paste('test','ing')
paste("test","ing")
paste("test","ing",sep='')
df.Sam.swim <- read.csv('Samswim.csv', header = TRUE)
getwd()
getwd()
setwd('/Users/smaticka/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files/csv files/')
getwd()
df.Sam.swim <- read.csv('Samswim.csv', header = TRUE)
df.S.swim.start <- read.csv('SamStartTimeswim.csv',header = TRUE)
df.Sam.swim = cbind(df.Sam.swim, df.S.swim.start)
View(df.S.swim.start)
View(df.S.swim.start)
TrainingData <- readRDS("~/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files/TrainingData.rds")
View(TrainingData)
ls()
test=2
ls()
rm(list=ls())
# location of this file
setwd('/Users/smaticka/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files/csv files/')
df.Sam.swim <- read.csv('Samswim.csv', header = TRUE)
# df.S.swim.start <- read.csv('SamStartTimeswim.csv',header = TRUE)
df.Sam.swim = cbind(df.Sam.swim, df.S.swim.start)
View(df.Sam.swim)
df.S.swim.start <- read.csv('SamStartTimeswim.csv',header = TRUE)
df
View(df)
View(df.S.swim.start)
df.Sam.swim <- read.csv('Samswim.csv', header = TRUE)
rm(list=ls())
# location of this file
setwd('/Users/smaticka/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files/csv files/')
df.Sam.swim <- read.csv('Samswim.csv', header = TRUE)
df.S.swim.start <- read.csv('SamStartTimeswim.csv',header = TRUE)
df.Sam.swim = cbind(df.Sam.swim, df.S.swim.start)
df.Adam.swim <- read.csv('Adamswim.csv', header = TRUE)
df.A.swim.start <- read.csv('AdamStartTimeswim.csv',header = TRUE)
df.Adam.swim = cbind(df.Adam.swim, df.A.swim.start)
df.Adam.ride <- read.csv('Adamride.csv', header = TRUE)
df.A.ride.start <- read.csv('AdamStartTimeride.csv',header = TRUE)
df.Adam.ride = cbind(df.Adam.ride, df.A.ride.start)
df.Adam.run <- read.csv('Adamrun.csv', header = TRUE)
df.A.run.start <- read.csv('AdamStartTimerun.csv',header = TRUE)
df.Adam.run = cbind(df.Adam.run, df.A.run.start)
df.Adam.walk <- read.csv('Adamwalk.csv', header = TRUE)
df.A.walk.start <- read.csv('AdamStartTimewalk.csv',header = TRUE)
df.Adam.walk = cbind(df.Adam.walk, df.A.walk.start)
# combine all activities into one data frame
df = rbind(df.Sam.swim, df.Adam.run, df.Adam.ride, df.Adam.swim, df.Adam.walk)
# replace the start time covariate with time
df$Tstart = df$Time
df = df[,colnames(df)!="Time"]
# shuffle the data frame (random sample without replacement)
# (column means were the same before and after shuffling. good.)
n = dim(df)[1]
df = df[sample.int(n, size = n, replace = FALSE),]
n
View(df.Adam.run)
rm(list=ls())
# location of this file
setwd('/Users/smaticka/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files/csv files/')
df.Sam.swim <- read.csv('Samswim.csv', header = TRUE)
df.Adam.swim <- read.csv('Adamswim.csv', header = TRUE)
df.Adam.ride <- read.csv('Adamride.csv', header = TRUE)
df.Adam.run <- read.csv('Adamrun.csv', header = TRUE)
df.Adam.walk <- read.csv('Adamwalk.csv', header = TRUE)
# combine all activities into one data frame
df = rbind(df.Sam.swim, df.Adam.run, df.Adam.ride, df.Adam.swim, df.Adam.walk)
df$Time
df$Tstart
dim(df$Tstart)
source('~/Box Sync/stanford/Classes/MS&E 226 small data/mini project/2_Assemble_Describe_Data/ProcessData.R', echo=TRUE)
# Filename: ProcessData.R
#
# Author: Sam Maticka, Nov. 2015
#
# Description: This script reads in .csv files containing
rm(list=ls())
# location of this file
setwd('/Users/smaticka/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files/csv files/')
df.Sam.swim <- read.csv('Samswim.csv', header = TRUE)
df.Adam.swim <- read.csv('Adamswim.csv', header = TRUE)
df.Adam.ride <- read.csv('Adamride.csv', header = TRUE)
df.Adam.run <- read.csv('Adamrun.csv', header = TRUE)
df.Adam.walk <- read.csv('Adamwalk.csv', header = TRUE)
# combine all activities into one data frame
df = rbind(df.Sam.swim, df.Adam.run, df.Adam.ride, df.Adam.swim, df.Adam.walk)
# # replace the start time covariate with time
# df$Tstart = df$Time
# df = df[,colnames(df)!="Time"]
# shuffle the data frame (random sample without replacement)
# (column means were the same before and after shuffling. good.)
n = dim(df)[1]
df = df[sample.int(n, size = n, replace = FALSE),]
# separate the data into training and test
# use a seed in case I need to rerun
set.seed(123)
# divide total number of total observations into training and testing
train.ind = sample(1:n, 0.8*n)
df.train = df[train.ind,]
df.test  = df[-train.ind,]
saveRDS(df.train, file="../TestTrainingData.rds")
# saveRDS(df.test, file="../TestData.rds")
rm(list=ls())
TestTrainingData <- readRDS("~/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files/TestTrainingData.rds")
ls()
test1=TestTrainingData
TestData <- readRDS("~/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files/TestData.rds")
TrainingData <- readRDS("~/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files/TrainingData.rds")
View(TrainingData)
View(test1)
# location of training and test data sets
setwd('/Users/smaticka/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files')
.libPaths("C:\\Users\\smaticka\\Documents\\R\\win-library\\3.2")
library(ggplot2)
library(GGally)
df <- readRDS("TrainingData.rds")
help(ggpairs)
??ggpairs
.libPaths()
# read in training data
# location of training and test data sets
setwd('/Users/smaticka/Box Sync/stanford/Classes/MS&E 226 small data/mini project/I_Data_Files')
# .libPaths("C:\\Users\\smaticka\\Documents\\R\\win-library\\3.2")
library(ggplot2)
library(GGally)
df <- readRDS("TrainingData.rds")
ID <- as.data.frame(cbind(df$Athlete, df$FileID))
#reassign df without IDs
df = df[,colnames(df)!="Athlete"]
df = df[,colnames(df)!="FileID"]
df = df[,colnames(df)!="Ibike"]
# convert Iswim integer to numeric to apply mean to data frame as matrix
df$Iswim = as.numeric(df$Iswim)
# calculate mean manually (need to change class)
ncov = dim(df)[2]
# calculate mean and standard deviation of columns
M  <- apply(df[,-ncov], 2, mean)
SD <- apply(df[,-ncov], 2, sd)
print(formatC(M,digits=5,format="fg",flag="#"))
print(formatC(SD,digits=5,format="fg",flag="#"))
# separate activities
n = nrow(df)
mean.swim = nrow(df[df$Activity == "swim",])/n
mean.walk = nrow(df[df$Activity == "walk",])/n
mean.run = nrow(df[df$Activity == "run",])/n
mean.ride = nrow(df[df$Activity == "ride",])/n
#calculate cor. coefficient for each covariate except Dtotal (the response variable for regression model)
df.cov = df[,colnames(df)!="Dtotal"]
Ncov = length(df.cov)
coef = rep(NA,Ncov)
for (i in 1:Ncov-1) {
coef[i] = cor(df.cov[,i], df$Dtotal)
}
# associate variable name to the coefficient
covar = colnames(df.cov)
plot(factor(covar), coef, las = 2)
# mutual correlations
ggpairs(df.cov, columns = 1:Ncov, las =0)
library(ggplot2)
library(GGally)
library(ggplot2)
ls(.libPaths())
.libPaths()
rm(ls())
rm(list=ls())
library(ggplot2)
install.packages("ggplot2")
install.packages("GGally")
ibrary(ggplot2)
library(GGally)
library(ggplot2)
library(GGally)
.libPaths('/private/var/folders/1y/x6b7r62j1kb0n9w4cpt2p7_w0000gn/T/RtmpX1WUmP/downloaded_packages')
library(ggplot2)
rm(list=ls())
.libPaths()
install.packages("ggplot2",lib = "/usr/local/lib/R/site-library")
install.packages("ggplot2",lib = "/usr/local/lib/R/site-library", dependencies=TRUE)
